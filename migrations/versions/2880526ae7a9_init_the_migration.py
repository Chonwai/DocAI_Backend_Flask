"""Init the Migration.

Revision ID: 2880526ae7a9
Revises: 
Create Date: 2022-06-25 03:51:23.077026

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2880526ae7a9'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('folders',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('forms_schema',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('form_schema', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.Column('ui_schema', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.Column('data_schema', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_forms_schema_id'), 'forms_schema', ['id'], unique=True)
    op.create_table('labels',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('roles',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('role', sa.TEXT(), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('documents',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('label_id', sa.INTEGER(), nullable=True),
    sa.Column('storage_url', sa.TEXT(), nullable=False),
    sa.Column('content', sa.TEXT(), nullable=True),
    sa.Column('status', postgresql.ENUM('pending', 'uploaded', 'confirmed', name='document_status_enum'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['label_id'], ['labels.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_documents_id'), 'documents', ['id'], unique=True)
    op.create_index(op.f('ix_documents_label_id'), 'documents', ['label_id'], unique=False)
    op.create_table('users',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('username', sa.TEXT(), nullable=False),
    sa.Column('password', sa.TEXT(), nullable=False),
    sa.Column('role_id', postgresql.UUID(), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('last_active_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=True)
    op.create_index(op.f('ix_users_role_id'), 'users', ['role_id'], unique=False)
    op.create_table('document_folder',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('document_id', postgresql.UUID(), nullable=False),
    sa.Column('folder_id', postgresql.UUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ),
    sa.ForeignKeyConstraint(['folder_id'], ['folders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_document_folder_document_id'), 'document_folder', ['document_id'], unique=False)
    op.create_index(op.f('ix_document_folder_folder_id'), 'document_folder', ['folder_id'], unique=False)
    op.create_index(op.f('ix_document_folder_id'), 'document_folder', ['id'], unique=True)
    op.create_table('documents_approval',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('document_id', postgresql.UUID(), nullable=False),
    sa.Column('approved_by', postgresql.UUID(), nullable=False),
    sa.Column('status', postgresql.ENUM('awaiting', 'approved', 'rejected', name='document_approval_status_enum'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['approved_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_documents_approval_approved_by'), 'documents_approval', ['approved_by'], unique=False)
    op.create_index(op.f('ix_documents_approval_document_id'), 'documents_approval', ['document_id'], unique=False)
    op.create_index(op.f('ix_documents_approval_id'), 'documents_approval', ['id'], unique=True)
    op.create_table('forms_data',
    sa.Column('id', postgresql.UUID(), nullable=False),
    sa.Column('document_id', postgresql.UUID(), nullable=False),
    sa.Column('schema_id', postgresql.UUID(), nullable=False),
    sa.Column('data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ),
    sa.ForeignKeyConstraint(['schema_id'], ['forms_schema.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_forms_data_document_id'), 'forms_data', ['document_id'], unique=False)
    op.create_index(op.f('ix_forms_data_id'), 'forms_data', ['id'], unique=True)
    op.create_index(op.f('ix_forms_data_schema_id'), 'forms_data', ['schema_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_forms_data_schema_id'), table_name='forms_data')
    op.drop_index(op.f('ix_forms_data_id'), table_name='forms_data')
    op.drop_index(op.f('ix_forms_data_document_id'), table_name='forms_data')
    op.drop_table('forms_data')
    op.drop_index(op.f('ix_documents_approval_id'), table_name='documents_approval')
    op.drop_index(op.f('ix_documents_approval_document_id'), table_name='documents_approval')
    op.drop_index(op.f('ix_documents_approval_approved_by'), table_name='documents_approval')
    op.drop_table('documents_approval')
    op.drop_index(op.f('ix_document_folder_id'), table_name='document_folder')
    op.drop_index(op.f('ix_document_folder_folder_id'), table_name='document_folder')
    op.drop_index(op.f('ix_document_folder_document_id'), table_name='document_folder')
    op.drop_table('document_folder')
    op.drop_index(op.f('ix_users_role_id'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_documents_label_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_id'), table_name='documents')
    op.drop_table('documents')
    op.drop_table('roles')
    op.drop_table('labels')
    op.drop_index(op.f('ix_forms_schema_id'), table_name='forms_schema')
    op.drop_table('forms_schema')
    op.drop_table('folders')
    # ### end Alembic commands ###
